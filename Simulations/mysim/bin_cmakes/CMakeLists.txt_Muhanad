cmake_minimum_required(VERSION 2.8)

SET(CMAKE_CXX_STANDARD 14)
SET ( EXECUTABLE dsim )
SET(  QT_USE_QTXML TRUE )

#This is for heterogenous groups
#add_definitions(-D_HETERO_)

# UNCOMMENT FOR GRAPHICS
add_definitions(-D_GRAPHICS_)


FIND_PACKAGE( MPI )
FIND_PACKAGE( Qt COMPONENTS QtOpenGL REQUIRED )
FIND_PACKAGE( Qt4 REQUIRED )
SET( QT_USE_QTOPENGL TRUE )
SET(  QT_USE_QTXML TRUE )
INCLUDE( ${QT_USE_FILE} )


FILE ( GLOB SOURCES ./*.cpp ./MISC/*.cpp ./EA/*.cpp ./CONTROLLERS/*.cpp ./EXP/*.cpp ./WORLD/*.cpp  ./RENDERING/*.cpp ) #  
FILE ( GLOB HEADERS ./*.h ./MISC/*.h ./EA/*.h ./CONTROLLERS/*.h ./EXP/*.h ./WORLD/*.h  ./RENDERING/*.h ) #
FILE ( GLOB UIS ./*.ui  ./RENDERING/*.ui )  #


QT4_WRAP_CPP( SOURCES ${HEADERS} )
QT4_WRAP_UI( SOURCES  ${UIS} )
FIND_PACKAGE ( GLUT )  
FIND_PACKAGE ( OpenGL )

INCLUDE_DIRECTORIES( ${BULLET_INCLUDE_DIR} /usr/include/bullet/ ${OPENGL_INCLUDE_DIR} ${GLUT_INCLUDE_DIR} /usr/include/ /usr/local/include/ ${CMAKE_CURRENT_BINARY_DIR} ./EXP/RENDERING ${MPI_INCLUDE_PATH} /usr/include/ )
# UNCOMMENT FOR GRAPHICS

# To add c++11 support
if (MSVC) # MSVC compiler (Win32 only)
        # Display more warnings
        SET (CMAKE_CXX_FLAGS "/W3")
elseif (UNIX OR CMAKE_COMPILER_IS_GNUCXX) # Clang OR Gcc (Linux, Mac OS or Win32 with MingW)
        # Enable C++11 and displays all warnings
        SET (CMAKE_CXX_COMPILER mpicxx)
        SET (CMAKE_CXX_FLAGS " -std=c++11") #  -pthread -lstdc++ 
        if (APPLE) # Clang / Mac OS only
                # Required on OSX to compile c++11
                SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++ ") # -Xarch_i386 -mmacosx-version-min=10.7

		INCLUDE_DIRECTORIES ( /System/Library/Frameworks )
   		FIND_LIBRARY(COCOA_LIBRARY Cocoa)
   		FIND_LIBRARY(GLUT_LIBRARY GLUT )
   		FIND_LIBRARY(OpenGL_LIBRARY OpenGL )
   		MARK_AS_ADVANCED (COCOA_LIBRARY
                     		 GLUT_LIBRARY
                     		 OpenGL_LIBRARY)
   	        SET(OpenGL_LIBS ${COCOA_LIBRARY} ${GLUT_LIBRARY} ${OpenGL_LIBRARY})
        endif(APPLE)
endif()

#  UNCOMMENT FOR NO GRAPHICS
#FILE ( GLOB SOURCES ./*.cpp ./MISC/*.cpp ./CONTROLLERS/*.cpp ./EVOL_ALGORITHM/*.cpp   ./EXP/*.cpp )
#FILE ( GLOB HEADERS ./*.h ./MISC/*.h ./CONTROLLERS/*.h ./EVOL_ALGORITHM/*.h   ./EXP/*.h )
#INCLUDE_DIRECTORIES( /usr/include/ ${CMAKE_CURRENT_BINARY_DIR} )
#  UNCOMMENT FOR NO GRAPHICS

ADD_EXECUTABLE( ${EXECUTABLE} ${SOURCES})

# UNCOMMENT FOR GRAPHICS
TARGET_LINK_LIBRARIES( ${EXECUTABLE} QGLViewer ${OPENGL_glu_LIBRARY}  ${GLUT_LIBRARIES} -lGL -lGLU  ${QT_LIBRARIES} )#revel xvidcore
TARGET_LINK_LIBRARIES( ${EXECUTABLE} "-L/sw/lib -lgsl -lgslcblas -lm -L/usr/lib/ -lqwt -lpthread -lBulletSoftBody -lBulletDynamics -lBulletCollision -lLinearMath" ) #qwt-6.1.1-svn/lib -lNewton

# UNCOMMENT FOR GRAPHICS

#  UNCOMMENT FOR NO GRAPHICS
#TARGET_LINK_LIBRARIES( ${EXECUTABLE} )
#TARGET_LINK_LIBRARIES( ${EXECUTABLE} "-L/sw/lib -lgsl -lgslcblas -lm" )
#  UNCOMMENT FOR NO GRAPHICS

